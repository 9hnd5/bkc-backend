// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bkc_backend.Data;

namespace bkc_backend.Data.Migrations
{
    [DbContext(typeof(BkcDbContext))]
    [Migration("20210106100658_update-table-name")]
    partial class updatetablename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("bkc_backend.Data.Entities.Booker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineManagerId")
                        .HasColumnType("int");

                    b.Property<string>("LineManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BkcBooker");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.BookingInfor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BookerId")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonBooking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPerson")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BkcBookingInfor");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.BookingPickupLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BookerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteByAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteByBooker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("PickupLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BkcBookingPickupLocation");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AvailableSeat")
                        .HasColumnType("int");

                    b.Property<string>("BuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSeat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BkcCar");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            AvailableSeat = 12,
                            BuId = "300000001732966",
                            BuName = "Head Office",
                            DriverId = 2001,
                            Number = "GOLD-9X001",
                            Status = "Free",
                            TotalSeat = 12
                        },
                        new
                        {
                            Id = 1002,
                            AvailableSeat = 10,
                            BuId = "300000001732966",
                            BuName = "Head Office",
                            DriverId = 2002,
                            Number = "GOLD-8X001",
                            Status = "Free",
                            TotalSeat = 10
                        },
                        new
                        {
                            Id = 1003,
                            AvailableSeat = 7,
                            BuId = "300000001732966",
                            BuName = "Head Office",
                            DriverId = 2003,
                            Number = "GOLD-7X001",
                            Status = "Free",
                            TotalSeat = 7
                        },
                        new
                        {
                            Id = 1004,
                            AvailableSeat = 4,
                            BuId = "300000001732966",
                            BuName = "Head Office",
                            DriverId = 2004,
                            Number = "GOLD-6X001",
                            Status = "Free",
                            TotalSeat = 4
                        },
                        new
                        {
                            Id = 1005,
                            AvailableSeat = 5,
                            BuId = "300000001732979",
                            BuName = "Projects",
                            DriverId = 2005,
                            Number = "GOLD-5X001",
                            Status = "Free",
                            TotalSeat = 5
                        },
                        new
                        {
                            Id = 1006,
                            AvailableSeat = 6,
                            BuId = "300000001732979",
                            BuName = "Projects",
                            DriverId = 2006,
                            Number = "GOLD-4X001",
                            Status = "Free",
                            TotalSeat = 6
                        },
                        new
                        {
                            Id = 1007,
                            AvailableSeat = 12,
                            BuId = "300000001732979",
                            BuName = "Projects",
                            DriverId = 2007,
                            Number = "GOLD-3X001",
                            Status = "Free",
                            TotalSeat = 12
                        });
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BkcDriver");

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            Email = "hanv@greenfeed.com.vn",
                            Name = "Nguyễn Văn Hạ",
                            Phone = 93422345
                        },
                        new
                        {
                            Id = 2002,
                            Email = "lamnv@greenfeed.com.vn",
                            Name = "Nguyễn Văn Lâm",
                            Phone = 93422335
                        },
                        new
                        {
                            Id = 2003,
                            Email = "cuongtv@greenfeed.com.vn",
                            Name = "Trần Văn Cường",
                            Phone = 33422335
                        },
                        new
                        {
                            Id = 2004,
                            Email = "tientv@greenfeed.com.vn",
                            Name = "Trần Văn Tiến",
                            Phone = 56422335
                        },
                        new
                        {
                            Id = 2005,
                            Email = "xuanln@greenfeed.com.vn",
                            Name = "Lâm Nguyễn Xuân",
                            Phone = 99422335
                        },
                        new
                        {
                            Id = 2006,
                            Email = "tuongnx@greenfeed.com.vn",
                            Name = "Nguyễn Xuân Tường",
                            Phone = 11422335
                        },
                        new
                        {
                            Id = 2007,
                            Email = "namnt@greenfeed.com.vn",
                            Name = "Nguyễn Thạch Nam",
                            Phone = 88422335
                        });
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BkcRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.RoleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BkcRoleUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuId = "300000001732966",
                            EmployeeId = 100001,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuId = "300000001732966",
                            EmployeeId = 100002,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            BuId = "300000001732966",
                            EmployeeId = 100005,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            BuId = "300000001732979",
                            EmployeeId = 100009,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            BuId = "300000001732979",
                            EmployeeId = 100010,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BookerId")
                        .HasColumnType("int");

                    b.Property<string>("BookerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteByAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BkcTrip");
                });
#pragma warning restore 612, 618
        }
    }
}
