// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bkc_backend.Data;

namespace bkc_backend.Data.Migrations
{
    [DbContext(typeof(BookingCarDbContext))]
    [Migration("20210129091301_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("bkc_backend.Data.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AvailableSeat")
                        .HasColumnType("int");

                    b.Property<string>("BuId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BuName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("Manufactured")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalSeat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BKC_Car");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeBuId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeBuName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("BKC_Driver");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GuestName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("BKC_Location");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BKC_Participant");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.RelatedPeople", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BKC_RelatedPeople");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("BKC_Role");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MEMBER"
                        },
                        new
                        {
                            Id = 1,
                            Name = "SUPERADMIN"
                        });
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.RoleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmployeeBuId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BKC_RoleUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeBuId = "300000001732966",
                            EmployeeId = "102144",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeBuId = "300000001732966",
                            EmployeeId = "104077",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            EmployeeBuId = "300000001732979",
                            EmployeeId = "602748",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreateDate")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeBuId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeBuName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeDepartment")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeLineManagerId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeLineManagerName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FromLocation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HandledDate")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HandlerId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HandlerName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("bit");

                    b.Property<string>("ReasonBooking")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ToLocation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalParticipant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BKC_Ticket");
                });

            modelBuilder.Entity("bkc_backend.Data.Entities.TicketCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BKC_TicketCar");
                });
#pragma warning restore 612, 618
        }
    }
}
